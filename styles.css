/* Global Styles */
body {
    font-family: 'Comic Sans MS', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;    background-color: #f0f9ff;
    margin: 0;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
}

/* Layout */
.main-content {
    display: flex;
    gap: 20px;
    align-items: flex-start;
    max-width: 1200px;
    width: 100%;
    margin-bottom: 50px;
    position: relative;
}

.problem-area {
    flex: 1;
}

.container {
    width: 100%;
    text-align: center;
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
}

/* Header */
.header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    margin-bottom: 20px;
    padding: 0 20px;
    max-width: 1000px;
    margin: 0 auto 20px auto;
}

h1 {
    text-align: center;
    margin: 0 auto;
    font-size: 32px;
    flex-grow: 1;
    padding: 0 20px;
}

.home-button, .toggle-scratchpad {
    padding: 12px 20px;
    font-size: 16px;
    background-color: #2196F3;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    min-width: 120px;
    justify-content: center;
}

.home-button:hover, .toggle-scratchpad:hover {
    background-color: #1976D2;
}

/* Problem Section */
.problem {
    font-size: 28px;
    margin: 30px auto;
    padding: 30px;
    background-color: white;
    border-radius: 15px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    max-width: 900px;
}

.options {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    margin: 30px auto;
    max-width: 900px;
    padding: 0 20px;
}

.option {
    padding: 25px;
    font-size: 24px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: all 0.3s ease;
    width: 100%;
    text-align: center;
}

.option:hover {
    transform: scale(1.05);
    background-color: #45a049;
}

.option.wrong {
    background-color: #ff4444;
    animation: shake 0.5s;
}

.option.correct {
    background-color: #4CAF50;
    animation: correct 0.5s;
}

/* Analog Clock Styles */
.clock-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
    /* height: 300px; Ensure options container has space */
}

.analog-clock {
    width: 250px;
    height: 250px;
    border: 5px solid #333;
    border-radius: 50%;
    position: relative;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0,0,0,0.2);
}

.clock-face {
    width: 100%;
    height: 100%;
    position: relative;
}

.clock-center {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 10px;
    background-color: #333;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
}

.clock-hand {
    position: absolute;
    bottom: 50%;
    left: 50%;
    background-color: #333;
    transform-origin: bottom center;
    border-radius: 5px;
}

.hour-hand {
    width: 6px;
    height: 30%; /* Shorter */
    transform: translateX(-50%) rotate(0deg); /* Initial rotation */
    z-index: 8;
}

.minute-hand {
    width: 4px;
    height: 40%; /* Longer */
    transform: translateX(-50%) rotate(0deg); /* Initial rotation */
    z-index: 9;
    background-color: #555; /* Slightly different color */
}

.clock-number {
    position: absolute;
    width: 30px;
    height: 30px;
    text-align: center;
    line-height: 30px;
    font-size: 18px;
    font-weight: bold;
    color: #444;
    cursor: pointer;
    user-select: none;
    border-radius: 50%;
    transition: background-color 0.2s, color 0.2s;
}

.clock-number:hover {
    background-color: #eee;
}

.clock-number.selected {
    background-color: #4CAF50; /* Highlight selected number */
    color: white;
}

.clock-number.wrong {
    background-color: #ff4444; /* Use shake animation color */
    color: white;
    animation: shake 0.5s;
}

.clock-number.correct {
     background-color: #4CAF50; /* Use correct animation color */
    color: white;
    /* animation: correct 0.5s; */ /* Optional: can use pulse/highlight */
}

/* Navigation */
.navigation {
    margin: 30px auto;
    text-align: center;
    display: flex;
    justify-content: center;
    gap: 20px;
}

.nav-button {
    padding: 15px 30px;
    font-size: 18px;
    background-color: #2196F3;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    min-width: 150px;
}

.nav-button:hover {
    background-color: #1976D2;
}

.nav-button:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
}

/* Scratchpad */
.scratchpad-area {
    display: none;
    width: 350px;
    min-height: 550px;
    background: white;
    border-radius: 15px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    padding: 10px;
}

.scratchpad-area.open {
    display: block;
}

.scratchpad-controls {
    display: flex;
    gap: 10px;
    margin-bottom: 10px;
    justify-content: center;
}

.scratchpad-button {
    padding: 8px 15px;
    font-size: 16px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 5px;
}

.scratchpad-button:hover {
    background-color: #45a049;
}

.scratchpad-button.clear {
    background-color: #ff4444;
}

.scratchpad-button.clear:hover {
    background-color: #ff3333;
}

.scratchpad-canvas {
    width: 100%;
    height: 500px !important;
    min-height: 500px;
    border: 2px solid #ddd;
    border-radius: 8px;
    touch-action: none;
    cursor: crosshair;
    background-color: #fff;
    display: block;
}

/* Problem Type Footer */
.problem-type {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #fff;
    padding: 10px;
    font-size: 14px;
    color: #666;
    text-align: center;
    border-top: 2px solid #4CAF50;
    box-shadow: 0 -2px 4px rgba(0,0,0,0.1);
}

/* Stars Animation */
.stars {
    position: fixed;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 9999;
}

.star {
    position: absolute;
    color: gold;
    font-size: 30px;
    animation: star-fall 1s ease-out forwards;
}

/* Confetti Animation */
.confetti {
    position: absolute;
    width: 10px;
    height: 20px;
    animation: confetti-fall 3s ease-out forwards;
}

/* Hearts Animation */
.heart {
    position: absolute;
    color: #ff4444;
    font-size: 24px;
    animation: heart-float 2s ease-out forwards;
}

/* Sparkles Animation */
.sparkle {
    position: absolute;
    color: gold;
    font-size: 20px;
    animation: sparkle-spin 1.5s ease-out forwards;
}

/* Balloons Animation */
.balloon {
    position: absolute;
    font-size: 40px;
    animation: balloon-float 4s ease-out forwards;
}

/* Animations */
@keyframes star-fall {
    0% {
        transform: translateY(-50px) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) rotate(360deg);
        opacity: 0;
    }
}

@keyframes confetti-fall {
    0% {
        transform: translateY(-10px) rotate(0deg);
        opacity: 1;
    }
    25% {
        transform: translateY(25vh) rotate(90deg) translateX(20px);
    }
    50% {
        transform: translateY(50vh) rotate(180deg) translateX(-20px);
    }
    75% {
        transform: translateY(75vh) rotate(270deg) translateX(20px);
    }
    100% {
        transform: translateY(100vh) rotate(360deg);
        opacity: 0;
    }
}

@keyframes heart-float {
    0% {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
    50% {
        transform: translateY(-50vh) scale(1.5);
        opacity: 0.5;
    }
    100% {
        transform: translateY(-100vh) scale(0.5);
        opacity: 0;
    }
}

@keyframes sparkle-spin {
    0% {
        transform: rotate(0deg) scale(1);
        opacity: 1;
    }
    50% {
        transform: rotate(180deg) scale(1.5);
        opacity: 0.5;
    }
    100% {
        transform: rotate(360deg) scale(0.5);
        opacity: 0;
    }
}

@keyframes balloon-float {
    0% {
        transform: translateY(0) translateX(0);
        opacity: 1;
    }
    25% {
        transform: translateY(-25vh) translateX(20px);
    }
    50% {
        transform: translateY(-50vh) translateX(-20px);
    }
    75% {
        transform: translateY(-75vh) translateX(20px);
    }
    100% {
        transform: translateY(-100vh) translateX(0);
        opacity: 0;
    }
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    75% { transform: translateX(10px); }
}

@keyframes correct {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Index Page Specific Styles */
.topic-section {
    background-color: white;
    border-radius: 15px;
    padding: 20px;
    margin-bottom: 30px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.topic-title {
    color: #4CAF50;
    font-size: 1.5em;
    margin-bottom: 20px;
}

.problem-links {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.problem-link {
    display: block;
    padding: 15px 20px;
    background-color: #4CAF50;
    color: white;
    text-decoration: none;
    border-radius: 10px;
    transition: all 0.3s ease;
    font-size: 1.2em;
}

.problem-link:hover {
    transform: scale(1.02);
    background-color: #45a049;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.coming-soon {
    color: #aaa;
    cursor: default;
}

.new-badge {
    color: #e74c3c; /* A noticeable red */
    font-weight: bold;
    font-size: 0.8em; /* Smaller than link text */
    margin-left: 4px; /* Space from icon */
    vertical-align: baseline; /* Align with text baseline */
    background-color: #fdfd96; /* Light yellow background */
    padding: 1px 3px;
    border-radius: 3px;
}

.emoji {
    font-size: 1.5em;
    margin-right: 10px;
}

/* Responsive Design */
@media (max-width: 768px) {
    .main-content {
        flex-direction: column;
    }

    .scratchpad-area {
        width: 100%;
        margin-top: 20px;
    }

    .options {
        grid-template-columns: 1fr;
    }

    .header-container {
        flex-direction: column;
        gap: 10px;
    }

    h1 {
        font-size: 24px;
    }

    .problem {
        font-size: 24px;
        padding: 20px;
    }

    .option {
        font-size: 20px;
        padding: 15px;
    }
}

/* == Flashcard Specific Styles == */
.flashcard-page-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 300px; /* Ensure space for the card */
}

.flashcard-container {
    perspective: 1000px; /* For 3D flip effect */
    width: 350px; /* Increased width */
    height: 200px; /* Increased height */
    margin-bottom: 20px;
}

.flashcard {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.6s;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    border-radius: 10px;
}

.flashcard.is-flipped {
    transform: rotateY(-180deg);
}

.flashcard-front,
.flashcard-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden; /* Hide the back side during flip */
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2.5em; /* Increased base font size */
    font-weight: bold;
    border-radius: 10px;
    padding: 15px;
    box-sizing: border-box;
    text-align: center;
}

.flashcard-front {
    background-color: #e0f2ff; /* Slightly darker light blue than body */
    color: #333;
}

.flashcard-back {
    background-color: #d1eaff; /* Slightly darker blue */
    color: #0056b3;
    transform: rotateY(-180deg);
}

.flashcard-navigation {
    margin-top: 15px;
}

/* Adjust button styles if needed, but trying to reuse nav-button */
.flashcard-navigation .nav-button {
    padding: 10px 20px;
    font-size: 1em;
    width: 100px; /* Changed from min-width for fixed size */
    text-align: center; /* Ensure text is centered */
}

/* Ensure container in problem area doesn't override flex */
.problem-area > .container.flashcard-page-container {
    display: flex; /* Re-assert flex */
}

/* == Toggle Switch Styles == */
.orientation-toggle {
    display: flex;
    align-items: center;
    gap: 0;
    background-color: #e6e6e6;
    border-radius: 30px;
    padding: 3px;
    position: relative;
    box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
}

.toggle-label {
    font-size: 14px;
    font-weight: 500;
    color: #555;
    padding: 6px 12px;
    border-radius: 25px;
    cursor: pointer;
    position: relative;
    z-index: 1;
    transition: color 0.3s ease;
}

/* Hide the default checkbox */
.switch {
    position: absolute;
    opacity: 0;
    height: 0;
    width: 0;
}

/* Style for the active state */
.toggle-label.active {
    color: #fff;
}

/* The slider background that moves */
.slider-bg {
    position: absolute;
    height: calc(100% - 6px);
    width: 50%;
    background-color: #2196F3;
    border-radius: 25px;
    transition: transform 0.3s ease;
    z-index: 0;
    top: 3px;
    left: 3px;
}

.slider-bg.vertical {
    transform: translateX(100%);
}

/* Remove old slider styles */
.slider,
.slider:before,
input:checked + .slider,
input:focus + .slider,
input:checked + .slider:before,
.slider.round,
.slider.round:before {
    display: none;
}

/* == Vertical Flashcard Styles == */
.flashcard.vertical {
    /* No rotation needed just by adding the class */
}

.flashcard-container.vertical {
    width: 200px; /* Increased width (was 150) */
    height: 350px; /* Increased height (was 250) */
}

.flashcard.vertical .flashcard-front,
.flashcard.vertical .flashcard-back {
    /* Arrange content vertically */
    flex-direction: column;
    align-items: center; 
    justify-content: center;
    line-height: 1.2; /* Adjust line height for multi-line */
}

/* Style for the vertically formatted problem text */
.flashcard.vertical .flashcard-front span {
    /* Remove previous general span styling for vertical */
    width: auto; /* Let content determine width initially */
    padding-right: 0;
}

.flashcard.vertical .flashcard-front .num-line {
    display: block; /* Each number/op on its own line */
    text-align: right;
    /* Set a fixed width based on characters (e.g., operator + space + 2 digits) */
    /* Adjust '4ch' or '5ch' as needed based on visual result */
    width: 5ch; 
    margin: 0 auto; /* Center the fixed-width block */
    padding: 0; /* Remove previous padding */
    box-sizing: border-box;
    line-height: 1.3; /* Adjust line spacing */
}

.flashcard.vertical .flashcard-front .op-line {
    display: block; /* Ensure it takes its own line */
    border-bottom: 2px solid #333;
    margin: 2px auto 5px auto; /* Adjust spacing around line */
    width: 5ch; /* Match number line width */
}

/* Keep back centered */
.flashcard.vertical .flashcard-back span {
    text-align: center;
} 